// This function is supposed send a request to walgreens authentication server
var timeoutid;
var __url;
var __keepalivedebug;
function keepAlive(url, keepalivedebug, resetFlag) {
    if (keepalivedebug == "true")
        alert("Keep Alive Alert");

    //pageLoadTimeStamp = null;
    //setTimeout("getTimeStampInfo(__impexpectedFormats)", 100);
    // getTimeStampInfo(__impexpectedFormats, url);
    setCookie('lwa', pageLoadTimeStamp);
    document.getElementById("myFrame").src = url + pageLoadTimeStamp;

    var k = "checkTimeout('" + url + "','" + keepalivedebug + "')";
    clearInterval(timeoutid);
    timeoutid = setInterval(k, intervalReset);


}


// Reads a cookie by name 
function getCookie(c_name) {
    if (document.cookie.length > 0) {
        c_start = document.cookie.indexOf(c_name + "=");
        if (c_start != -1) {
            c_start = c_start + c_name.length + 1;
            c_end = document.cookie.indexOf(";", c_start);
            if (c_end == -1) c_end = document.cookie.length;
            return unescape(document.cookie.substring(c_start, c_end));
        }
    }
    return null;
}

// Saves a cookie in the HTTP header. (This Cookie is non-persistent) 
function setCookie(c_name, value) {
    document.cookie = c_name + "=" + escape(value) + ";path=/;"; ;
}

// Checks if it is a time to make the "Keep Alive Call".
function checkTimeout(url, keepalivedebug) {
    this.__url = url;
    this.__keepalivedebug = keepalivedebug
    var lwaCookie = getCookie('lwa');
    if (lwaCookie != null && lwaCookie != "") {
        var cookieDate = Date.parse(lwaCookie);
        //var cDate = Date.parse((new Date()).toUTCString());
        getCurrentTimeStampInfo(__impexpectedFormats);

        setTimeout("KeepAliveTimeout('" + cookieDate + "','" + url + "','" + keepalivedebug + "')", __impKeepAliveTimeoutDelay);
        //        var cDate = currTimeStamp;
        //        var diff = cDate - cookieDate;
        //        if (diff > interval) {
        //            keepAlive(url, keepalivedebug,0);
        //        }
        //        else {
        //            /*if (__impPageLoadFlag == "true" && __impPageLoadFlag != null) {
        //                keepAlive(url, keepalivedebug);
        //                __impPageLoadFlag = "false";
        //            }
        //            else {*/
        //                var k = "keepAlive('" + url + "','" + keepalivedebug + "',1)";
        //                clearTimeout(timeoutid);
        //                 timeoutid = setTimeout(k, interval - diff);
        //                //clearInterval(timeoutid);
        //                //timeoutid = setInterval(k, interval - diff);
        //            //}
        //        }
    }
    else {
        keepAlive(url, keepalivedebug, 0);
    }

}
function KeepAliveTimeout(cookieDate, url, keepalivedebug) {
    var cDate = currTimeStamp;
    var diff = cDate - cookieDate;
    if (diff > interval) {
        keepAlive(url, keepalivedebug, 0);
    }
    else {
        /*if (__impPageLoadFlag == "true" && __impPageLoadFlag != null) {
        keepAlive(url, keepalivedebug);
        __impPageLoadFlag = "false";
        }
        else {*/
        var k = "keepAlive('" + url + "','" + keepalivedebug + "',1)";
        clearTimeout(timeoutid);
        timeoutid = setTimeout(k, interval - diff);
        //clearInterval(timeoutid);
        //timeoutid = setInterval(k, interval - diff);
        //}
    }
}

function getCurrentTimeStampInfo(format) {
    req = false;
    // branch for native XMLHttpRequest object
    if (window.XMLHttpRequest && !(window.ActiveXObject)) {
        try {
            req = new XMLHttpRequest();
        } catch (e) {
            req = false;
        }
        // branch for IE/Windows ActiveX version
    } else if (window.ActiveXObject) {
        try {
            req = new ActiveXObject("Msxml2.XMLHTTP");
        } catch (e) {
            try {
                req = new ActiveXObject("Microsoft.XMLHTTP");
            } catch (e) {
                req = false;
            }
        }
    }

    if (req != null) {

        req.onreadystatechange = function () {
            if (req.readyState == 4 && req.status == 200) {
                // only if ok
                currTimeStamp = req.responseText;

            }
        }

        req.open("GET", "../../timestamp.aspx", true);
        req.send("");
    }
}


