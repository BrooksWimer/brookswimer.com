// Overrides restartTimer, callTimer in head.js

function callTimer() {
    clearTimeout(warningTimer);
    startTimer();
}

function restartTimer() {
    if (window.__sessionExpired) {
        return;
    }
    expireTimer = new Date();
    expireTimer.setMinutes(expireTimer.getMinutes() + 2);
    var message = __SessionTimeoutDescription.replace('[TIME]', expireTimer.toLocaleTimeString()); // in case we ever want to nofify about a specific time
    var expire = true;
    var timeout = false;

    self.focus();

    window.__expireTimer = setTimeout(onSessionAboutToExpire, (2 * 60000));
    window.__expireDialog = bootbox.dialog({
        message: message,
        title: __SessionTimeout,
        onEscape: restartTimerConfirmed,
        buttons: {
            main: { label: __Continue, callback: restartTimerConfirmed }
        }
    });
    if (window.API_1484_11) {
        // SCORM 2004 - to support dialog display when flash content is presented on IE / Firefox
        this.$contentObject = $('#activityFrame');
        this.contentHeight = this.$contentObject.css('height');
        this.$contentObject.css('height', 0);
    } else if ($("#CourseIframe").length == 1) {
        // SCORM 1.2 - switch display between the course and our dialog
        $("#CourseIframe").css('display', 'none');
    } else if (window.top.API) {
        // SCORM 1.2 - switch display between the course and our dialog
        $('frameset', window.top.document).attr("rows", "0,0,0,0,*");
    }
}


function restartTimerConfirmed() {
    clearTimeout(window.__expireTimer);
    var getImg = new Image();
    getImg.src = getRandomUrl();
    clearTimeout(warningTimer);
    startInitialTimer();

    if (__impKeepAlive != null && __impKeepAlive && __impKeepAlive != "false") {
        getTimeStampInfo(__impexpectedFormats, "");
        setTimeout("checkTimeout(__impStrUrl, __impKeepAliveDebug)", __impKeepAliveTimeoutDelay);
    }

    // Execute restartTimerConfirmed of the OPENER in order to renew its timer as well (otherwise we only renew the course session timeout and not the main one)
    window.top.opener && window.top.opener.restartTimerConfirmedFromCoursePopup && window.top.opener.restartTimerConfirmedFromCoursePopup();

    if (window.API_1484_11) {
        // SCORM 2004 - to support dialog display when flash content is presented on IE / Firefox
        this.$contentObject = $('#activityFrame');
        this.$contentObject.css('height', this.contentHeight);
        // send commit to update user_session modify_dt
        window.API_1484_11.Commit("", true);
    } else if ($("#CourseIframe").length == 1) {
        // SCORM 1.2 - switch display back to the course 
        $("#CourseIframe").css('display', 'block');
        window.API.LMSCommit(false, true);
    } else if (window.top.API) {
        // SCORM 1.2 - switch display back to the course 
        $('frameset', window.top.document).attr("rows", "0,0,0,*,0");
        // send commit to update user_session modify_dt
        window.top.API.LMSCommit(false, true);
    }
}

function getRandomUrl() {
    return __TempImageSource + "&rand=" + Math.floor((1 + Math.random()) * 0x10000);
}

function onSessionAboutToExpire() {
    if (window.__expireDialog) {
        window.__expireDialog.remove();
        $('.modal-backdrop').remove();
    }
    window.terminateBeforeSessionTimeout = true;
    // call terminate according to the Scorm version
    // on success of terminate relate to sessionExpire flag
    if (window.API_1484_11) {
        // SCORM 2004
        window.unloaded = true;
        invokeUnload(window);
        doRequest("suspendAll");
    } else if (window.API || window.top.API) {
        // SCORM 1.2
        LMSAjaxCommit(false, true);
    }
}

function closeWindow() {
    if (window.top.opener) {
        window.top.close();
    } else {
        //console.log('closeWindow');
    }
}

function onSessionExpire() {
    window.__sessionExpired = true;
    clearTimeout(warningTimer);
    clearInterval(window.__checkConnectivityInterval);
    if (window.__expireDialog) {
        window.__expireDialog.remove();
        $('.modal-backdrop').remove();
    }
    bootbox.dialog({
        message: __SessionExpiredDescription,
        title: __SessionExpired,
        onEscape: closeWindow,
        buttons: {
            main: { label: __Close, callback: closeWindow }
        }
    });
    if ($("#CourseIframe").length == 1) {
        $("#CourseIframe").css('display', 'none');
    } else if (window.top.API) {
        // SCORM 1.2 - switch display between the course and our dialog
        $('frameset', window.top.document).attr("rows", "0,0,0,0,*");
    }
}

function shouldReloadMainPage(extraCondition) {
    // don't reload when call terminate before session timeout
    var notDuringSessionTimeout = !window.terminateBeforeSessionTimeout;
    // do reload when main page has reloadPage function
    var reloadPageExist = window.top.opener && window.top.opener.reloadPage;
    // don't reload when expireTimer has value
    var mainPageNotExpired = window.top.opener && (!window.top.opener.expireTimer || window.top.opener.expireTimer > new Date());
    // relate to extraCondition if exist
    var extraConditionRelate = (typeof (extraCondition) === "undefined" || extraCondition);

    return notDuringSessionTimeout && reloadPageExist && mainPageNotExpired && extraConditionRelate;
}


// Call the timer
startTimer();